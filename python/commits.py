"""[TASK] Commits  #5."""

# Опишите своими словами назначение каждого из этих типов коммитов:
#     feat - добавление нового функционала
#     fix - исправление бага
#     docs - изменения в документации
#     style - исправление оформления кода
#     refactor - исправление или улучшение кода без добавления функционала
#     test - добавление и изменение тестов
#     build - изменение системы сборки или внешних зависимостей
#     ci - изменения в файлах настройки непрерывной интеграции (CI)
#     perf - улучшение производительности без изменения поведения
#     chore - регулярное обслуживание или административные задачи
#
# Представьте, что вы исправили баг в функции, которая некорректно округляет числа. Сделайте фиктивный коммит и напишите для него сообщение в соответствии с Conventional Commits (используя тип fix).
#     git commit --allow-empty -m "fix: correct number rounding function"
#
# Добавление новой функциональности:
# Допустим, вы реализовали новую функцию generateReport в проекте. Сделайте фиктивный коммит с типом feat, отражающий добавление этой функциональности
#     git commit --allow-empty -m "feat: add generateReport function for generating reports"
#
# Модификация формата кода или стилей:
# Представьте, что вы поправили отступы и форматирование во всём проекте, не меняя логики кода. Сделайте фиктивный коммит с типом style
#     git commit --allow-empty -m "style: fixed indents and formatting throughout the project"
#
# Документация и тестирование:
#
# Сделайте фиктивный коммит с типом docs, добавляющий или улучшающий документацию для вашей новой функции.
#     git commit --allow-empty -m "docs: add documentation for the generateReport function"
# Сделайте фиктивный коммит с типом test, добавляющий тесты для этой же функции.
#     git commit --allow-empty -m "test: add tests for the generateReport function"
