"""[TASK] Cpython  #4."""

# 1. Что такое CPython и чем он отличается от Python?
#     - Реализация языка Python, написанная на C.
#     - Python - это спецификация языка программирования, а CPython - эго его интерпретатор.
# 3. Сколько существует реализаций Python, и какая из них самая популярная?
#     - 6 реализаций: CPython, PyPy, Jython, IronPython, Brython, Nuitka.
#     - CPython самая популярная реализация.
# 4. На каком языке написан CPython?
#     - С.
# 5. Кто создал CPython?
#     - Гвидо ван Россум.
# 6. Почему Python считается быстрым, несмотря на то, что это интерпретируемый язык?
#     - Интерпретатор компилирует исходный код в байткод, который затем исполняется виртуальной машиной на С.
# 7. Напишите путь к Интерпретатору CPython на вашем компьютере.
#     - C:\Users\nigma.DESKTOP-55Q3CA4\AppData\Local\Programs\Python\Python314\python.exe
# 8. Что содержится в папке include в CPython?
#     - файлы на языке C, необходимые для компиляции расширений и взаимодействия с ядром интерпретатора Python.
# 9. Где можно найти исходный код CPython дайте ссылку на репозиторий гитхаб.
#     - https://github.com/python/cpython
# 10. Как работает интерпретатор CPython при выполнении кода?
#     1. Читает исходный код, проверяет его синтаксис и форматирование.
#     2. Трансформирует исходный код в байт-код.
#     3. Передает байт-код виртуальной машине.
# 11. Какая команда используется для запуска файла с помощью CPython?
#     - python имя_файла.py.
# 12. Можно ли запускать текстовые файлы через интерпретатор Python? Почему?
#     - Можно, если в них содержится правильный Python код.
#     - Интерпретатор читает последовательность символов из файла и пытается выполнить их как команды на языке Python.
# 13. Как указать путь к интерпретатору и файлу для выполнения кода?
#     - ПКМ - свойства - расположение файла.
#     - Вставить в командную строку.
# 14. Чем PyPy отличается от CPython?
#     - Работает быстрее за счёт JIT-компиляции.
# 15. Почему PyPy не может использоваться для всех проектов на Python?
#     - Есть проблемы с совместимостью с библиотеками, использующими C-расширения, такими как NumPy или SciPy.
# 16. Где можно скачать PyPy?
#     - https://pypy.org/download.html
# 17. Как установить PyPy после скачивания?
#     - Распаковать архив.
# 18. Как запустить файл с помощью PyPy?
#     - Путь к интерпретатору PyPy пробел путь к файлу в командной строке.
# 19. Почему PyPy выполняет код быстрее, чем CPython?
#     - Преобразует в машинный код наиболее часто используемые компоненты кода, и оптимизирует его.
#
# Практические задания
#
# 2. Исследование структуры CPython
#     Найдите папку, где установлен Python (например, через команду which python в терминале или свойства ярлыка).
#     Откройте папку include и изучите её содержимое. Какое количество файлов на C там есть?
#     - 79.
# 5. Сравнение производительности CPython и PyPy
#     - CPython:
#         Result: 49999995000000
#         Execution time: 0.4225647449493408 seconds
#     - PyPy:
#         Result: 49999995000000
#         Execution time: 0.006410121917724609 seconds
#     - Вывод:
#         PyPy быстрее CPython примерно в 65 раз.
